LINKED LIST

INSERTING A NODE AT THE BEGINING
Algorithm:
1. Declare a head pointer and make it as NULL.
2. Create a new node with the given data.
3. Make the new node points to the head node.
4. Finally, make the new node as the head node.


INSERTING NODE AT THE END
Algorithm:
 1. Declare head pointer and make it as NULL.
 2. Create a new node with the given data. And make the new node => next as NULL. (Because the new node is going to be the last node.)
 3. If the head node is NULL (Empty Linked List),  make the new node as the head.
 4.The last node of a linked list has the reference pointer as NULL. => node=>next = NULL.To find the last node, 
 5.we have to iterate the linked till the node=>next != NULL.
 6.After that, we have to make the last node-> next as the new node. =>last node->next = new node;



DELETING A NODE:
Algorithm:
1. If the head node has the given key, make the head node points to the second node and free its memory.
2. Otherwise,From the current node, check whether the next node has the given key
3.if yes, make the current->next = current->next->next and free the memory.
4. else, update the current node to the next and do the above process (from step 2) till the last node.